---
title: "Dynamic Documentation with Quarto"
author: "Fantastic Statistician 4"
format:
  pdf:
    toc: false
    number-sections: false
jupyter: python3
execute:
  echo: true
  warning: false
  message: false
fig-width: 6
fig-height: 4
fig-align: center
---

# 1. Introduction

This document demonstrates how to run **Python code inside Quarto** and render the results (tables and plots) directly into a PDF.

## Environment check

```{python}
import sys, platform
print("Python:", sys.version.split()[0])
print("Platform:", platform.platform())
```

# 2. Data Preparation

Let’s create a small dataset and summarize it using `pandas`.

```{python}
import numpy as np
import pandas as pd

np.random.seed(2025)
n = 120
df = pd.DataFrame({
    "group": np.random.choice(["A","B"], size=n, p=[0.45, 0.55]),
    "x": np.random.normal(loc=10, scale=2.5, size=n),
    "y": np.random.gamma(shape=2.0, scale=3.0, size=n)
})
df.head()
```

## Descriptive Statistics

```{python}
desc = df.describe(include="all")
desc
```

# 3. Visualization

We can use `matplotlib` to create a scatterplot and a group-wise mean bar plot.

```{python}
import matplotlib.pyplot as plt

plt.figure()
plt.scatter(df["x"], df["y"], alpha=0.6)
plt.title("Scatter: y vs. x")
plt.xlabel("x")
plt.ylabel("y")
plt.grid(True)
plt.show()
```

```{python}
plt.figure()
ax = df.groupby("group")[["x","y"]].mean().plot(kind="bar")
plt.title("Group-wise Means")
plt.xlabel("group")
plt.ylabel("mean value")
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()
```

# 4. Summary Table

A more structured group summary table:

```{python}
summary_tbl = (
    df.groupby("group")
      .agg(n=("x","size"),
           x_mean=("x","mean"),
           x_sd=("x","std"),
           y_mean=("y","mean"),
           y_sd=("y","std"))
      .round(2)
)
summary_tbl
```

# 5. Simple Modeling Pipeline

A quick pipeline: preprocessing → model fitting → coefficient output.

```{python}
from sklearn.linear_model import LinearRegression

# create interaction term
df["x_centered"] = df["x"] - df["x"].mean()
df["gB"] = (df["group"] == "B").astype(int)
df["x_gB"] = df["x_centered"] * df["gB"]

X = df[["x_centered","gB","x_gB"]].values
y = df["y"].values

mdl = LinearRegression().fit(X, y)
coef = np.r_[mdl.intercept_, mdl.coef_]
pd.Series(coef, index=["(Intercept)","x_c","gB","x_c:gB"]).round(3)
```

# 6. Conclusion

- Quarto allows for **fully reproducible documents** with code, text, and output in one place.  
- You can generate **PDF, HTML, or Word** from the same `.qmd`.  
- Ideal for transparent, automated reporting in data science and analytics.


